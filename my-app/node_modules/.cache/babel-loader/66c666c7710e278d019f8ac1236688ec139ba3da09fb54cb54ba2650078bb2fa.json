{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefa\\\\KunstProjekt\\\\my-app\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\n// Sidebar.js\n// This is a sidebar component for our application.\n// It receives refs to the three main sections of the page (home, about, contact)\n// and a scrollToSection function as props.\n\nimport React, { useEffect, useState } from 'react';\nimport '../style/Sidebar.css'; // Assuming you have a separate CSS file for sidebar styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  homeRef,\n  aboutRef,\n  contactRef,\n  scrollToSection\n}) => {\n  _s();\n  // We'll use this state variable to keep track of which section\n  // is currently active, so we can set the appropriate CSS class\n  // on the corresponding list item.\n  const [activeSection, setActiveSection] = useState(null);\n\n  // The useEffect hook allows us to run some code when the component\n  // mounts or when certain values change. In this case, we want to\n  // run some code whenever the scroll position changes.\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      if (scrollPosition < aboutRef.current.offsetTop) {\n        setActiveSection(homeRef);\n      } else if (scrollPosition >= aboutRef.current.offsetTop && scrollPosition < servicesRef.current.offsetTop) {\n        setActiveSection(aboutRef);\n      } else if (scrollPosition >= oneRef.current.offsetTop && scrollPosition < portfolioRef.current.offsetTop) {\n        setActiveSection(oneRef);\n      } else if (scrollPosition >= twoRef.current.offsetTop && scrollPosition < contactRef.current.offsetTop) {\n        setActiveSection(twoRef);\n      } else {\n        setActiveSection(contactRef);\n      }\n    };\n\n    // Add event listener for scroll\n    window.addEventListener('scroll', handleScroll);\n\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [aboutRef, servicesRef, portfolioRef, contactRef, setActiveSection]);\n\n  // This function will be called when a user clicks on one of the list\n  // items in the sidebar. It will scroll the page to the corresponding\n  // section.\n  const handleItemClick = ref => {\n    scrollToSection(ref);\n    setActiveSection(ref);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: activeSection === homeRef ? 'active' : '',\n        onClick: () => handleItemClick(homeRef),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: activeSection === aboutRef ? 'active' : '',\n        onClick: () => handleItemClick(aboutRef),\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: activeSection === contactRef ? 'active' : '',\n        onClick: () => handleItemClick(contactRef),\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: activeSection === oneRef ? 'active' : '',\n        onClick: () => handleItemClick(oneRef),\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: activeSection === contactRef ? 'active' : '',\n        onClick: () => handleItemClick(contactRef),\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: activeSection === contactRef ? 'active' : '',\n        onClick: () => handleItemClick(contactRef),\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(Sidebar, \"kW/qpb4yZV+GyB1OX7BlObHuD0c=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Sidebar","homeRef","aboutRef","contactRef","scrollToSection","_s","activeSection","setActiveSection","handleScroll","scrollPosition","window","scrollY","current","offsetTop","servicesRef","oneRef","portfolioRef","twoRef","addEventListener","removeEventListener","handleItemClick","ref","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/stefa/KunstProjekt/my-app/src/components/Sidebar.jsx"],"sourcesContent":["// Sidebar.js\r\n// This is a sidebar component for our application.\r\n// It receives refs to the three main sections of the page (home, about, contact)\r\n// and a scrollToSection function as props.\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../style/Sidebar.css'; // Assuming you have a separate CSS file for sidebar styles\r\nconst Sidebar = ({ homeRef, aboutRef, contactRef, scrollToSection }) => {\r\n    // We'll use this state variable to keep track of which section\r\n    // is currently active, so we can set the appropriate CSS class\r\n    // on the corresponding list item.\r\n    const [activeSection, setActiveSection] = useState(null);\r\n   \r\n    // The useEffect hook allows us to run some code when the component\r\n    // mounts or when certain values change. In this case, we want to\r\n    // run some code whenever the scroll position changes.\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n          const scrollPosition = window.scrollY;\r\n      \r\n          if (scrollPosition < aboutRef.current.offsetTop) {\r\n            setActiveSection(homeRef);\r\n          } else if (scrollPosition >= aboutRef.current.offsetTop && scrollPosition < servicesRef.current.offsetTop) {\r\n            setActiveSection(aboutRef);\r\n          } else if (scrollPosition >= oneRef.current.offsetTop && scrollPosition < portfolioRef.current.offsetTop) {\r\n            setActiveSection(oneRef);\r\n          } else if (scrollPosition >= twoRef.current.offsetTop && scrollPosition < contactRef.current.offsetTop) {\r\n            setActiveSection(twoRef);\r\n          } else {\r\n            setActiveSection(contactRef);\r\n          }\r\n        };\r\n      \r\n        // Add event listener for scroll\r\n        window.addEventListener('scroll', handleScroll);\r\n      \r\n        // Remove event listener on cleanup\r\n        return () => {\r\n          window.removeEventListener('scroll', handleScroll);\r\n        };\r\n      }, [aboutRef, servicesRef, portfolioRef, contactRef, setActiveSection]);\r\n  \r\n    // This function will be called when a user clicks on one of the list\r\n    // items in the sidebar. It will scroll the page to the corresponding\r\n    // section.\r\n    const handleItemClick = (ref) => {\r\n      scrollToSection(ref);\r\n      setActiveSection(ref);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"sidebar\">\r\n        <ul>\r\n          <li\r\n            className={activeSection === homeRef ? 'active' : ''}\r\n            onClick={() => handleItemClick(homeRef)}\r\n          >\r\n            Home\r\n          </li>\r\n          <li\r\n            className={activeSection === aboutRef ? 'active' : ''}\r\n            onClick={() => handleItemClick(aboutRef)}\r\n          >\r\n            About\r\n          </li>\r\n          <li\r\n            className={activeSection === contactRef ? 'active' : ''}\r\n            onClick={() => handleItemClick(contactRef)}\r\n          >\r\n            Contact\r\n          </li>\r\n          <li\r\n            className={activeSection === oneRef ? 'active' : ''}\r\n            onClick={() => handleItemClick(oneRef)}\r\n          >\r\n            +1\r\n          </li>\r\n          <li\r\n            className={activeSection === contactRef ? 'active' : ''}\r\n            onClick={() => handleItemClick(contactRef)}\r\n          >\r\n            Contact\r\n          </li>\r\n          <li\r\n            className={activeSection === contactRef ? 'active' : ''}\r\n            onClick={() => handleItemClick(contactRef)}\r\n          >\r\n            Contact\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}